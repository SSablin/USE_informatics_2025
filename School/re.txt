re.findall(pattern, string)
Ищет все подстроки в строке string, которые соответствуют шаблону pattern, и возвращает их в виде списка.

python
Copy
import re
result = re.findall(r'\d+', 'abc123def456')  # ['123', '456']
re.search(pattern, string)
Ищет первое вхождение шаблона pattern в строке string. Возвращает объект Match, если найдено, иначе None.

python
Copy
match = re.search(r'\d+', 'abc123def456')
if match:
    print(match.group())  # 123
re.match(pattern, string)
Проверяет, соответствует ли начало строки string шаблону pattern. Возвращает объект Match, если найдено, иначе `None.

python
Copy
match = re.match(r'\d+', '123abc')  # Совпадение
print(match.group())  # 123
re.sub(pattern, repl, string)
Заменяет все вхождения шаблона pattern в строке string на строку repl.

python
Copy
result = re.sub(r'\d+', 'X', 'abc123def456')  # abcXdefX
re.split(pattern, string)
Разделяет строку string по шаблону pattern и возвращает список частей.

python
Copy
result = re.split(r'\d+', 'abc123def456ghi')  # ['abc', 'def', 'ghi']

Синтаксис регулярных выражений
Базовые символы:

\d — любая цифра ([0-9]).

\D — любой символ, кроме цифры.

\w — любая буква, цифра или нижнее подчёркивание ([a-zA-Z0-9_]).

\W — любой символ, кроме букв, цифр и нижнего подчёркивания.

\s — любой пробельный символ (пробел, табуляция, новая строка).

\S — любой символ, кроме пробельных.

. — любой символ, кроме новой строки.

Квантификаторы (указание количества):

* — 0 или более повторений.

+ — 1 или более повторений.

? — 0 или 1 повторение.

{n} — ровно n повторений.

{n,} — n или более повторений.

{n,m} — от n до m повторений.

Группировка и альтернативы:

() — группировка символов.

| — альтернатива (или).

(?:...) — несохраняющая группа (группа, которая не сохраняется в результатах).

Якоря (привязка к позиции):

^ — начало строки.

$ — конец строки.

\b — граница слова.

\B — не граница слова.

Экранирование:

Чтобы использовать специальные символы (например, *, +, ?, .) как обычные, их нужно экранировать с помощью \.

Например, \. означает точку, а не "любой символ".