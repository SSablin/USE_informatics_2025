#https://kompege.ru/variant?kim=25028749

#2
#print('w x y z F')
for w in range(2):
    for x in range(2):
        for y in range(2):
            for z in range(2):
                F = (x and (not y)) or (y == z) or (not w)
                if F == False:
                    print(w, z, y, x, F)

#14
num = 3 * 3125**8 + 2 * 625**7 - 4 * 625**6 + 3*125**5 - 2*25**4 - 2024
TF = ''
while num >= 25:
    TF += str(num % 25)
    num = num // 25
TF += str(num)
print(((TF)[::-1]).count('0'))

#23
def f(x, y):
    if x > y or x == 11: return 0
    if x == y: return 1
    return f(x + 1, y) + f(x * 2, y) + f(x ** 2, y)
print(f(2, 20))

#24
#https://dzen.ru/a/ZiiHookuO0GTVn58
'''
s = open('files/24_10105.txt').readline().split('T')
maxi = 0
for i in range(len(s)-100):
    r = 'T'.join(s[i:i+101])
    maxi = max(maxi, len(r))
print(maxi) #133, долго считает
'''

'''Комментарии к коду решения:

s = open('24.txt').readline().split('T') - считывает строку из файла '24.txt' и разделяет ее на части, используя разделитель 'T'. Результат сохраняется в списке s.
maxi = 0 - инициализирует переменную maxi значением 0, которая будет использоваться для хранения максимальной длины строки.
Цикл for i in range(len(s)-100): проходит по всем элементам списка s, за исключением последних 100 элементов.
r = 'T'.join(s[i:i+101]) - объединяет элементы списка s от индекса i до индекса i+101 с использованием разделителя 'T' и сохраняет результат в переменную r.
maxi = max(maxi, len(r)) - обновляет значение переменной maxi, если текущая длина строки r больше текущего значения переменной maxi.
print(maxi) - выводит на экран максимальную длину строки после прохождения всех элементов списка s.
Таким образом, данный код считывает строку из файла, разделяет ее на части, объединяет определенное количество частей с разделителем 'T' и находит максимальную длину строки, составленной из этих частей. Результат выводится на экран.

Ответ: 133'''

















