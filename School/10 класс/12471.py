'''№ 12471 PRO100 ЕГЭ 29.12.23 (Уровень: Базовый)
​В файле содержится последовательность натуральных чисел, каждое из которых не превышает 100 000.
Определите количество троек элементов последовательности, в которых все три элемента являются чётными числами или в которых есть хотя бы одно двузначное число.
А также сумма элементов тройки не больше максимального элемента последовательности, оканчивающегося на 13.
Гарантируется, что в последовательности есть хотя бы одно число, оканчивающееся на 13.
В ответе запишите количество найденных троек чисел, затем целую часть среднего арифметического сумм из элементов таких троек.
В данной задаче под тройкой подразумевается три идущих подряд элемента последовательности.
Для такого файла
10
10
10
20
Ответом будут числа: 2 35.
Целая часть среднего арифметического сумм из элементов подходящих троек это: ((10+10+10) + (10+10+20)) / 2 = 35.'''

f = open('files/17_12471.txt')

sp =[]

count3 = 0
max13 = -10**10
suma = 0

for i in f:
    sp.append(int(i))

for i in range(len(sp)):
    if sp[i] % 100 == 13:
        max13 = max(max13, sp[i])
print(f'max13 = {max13}')

for i in range(len(sp) - 2):
    if ((abs(sp[i]) % 2 == 0 and abs(sp[i + 1]) % 2 == 0 and abs(sp[i + 2]) % 2 == 0) or ((9 < abs(sp[i]) < 100) or (9 < abs(sp[i + 1]) < 100) or (9 < abs(sp[i + 2]) < 100))) and (sp[i] + sp[i + 1] + sp[i + 2] <= max13):
        count3 += 1
        suma += (sp[i] + sp[i + 1] + sp[i + 2])
        
arif = suma//count3

print(f'количество троек = {count3}, сумма = {arif}')
print(count3, arif)

